<div class="text-center p-4">
  <img src="https://cdn.worldvectorlogo.com/logos/react-1.svg" width="138" height="128">
</div>


<div class="text-center p-4">
  <h2>Unidirectional Data Flow</h2>
  <p class="lead">One Direction to Rule Them All</p>
</div>

@if (ViewBag.IsComplete == false)
{
  @using (Html.BeginForm())
  {
<div class="row justify-content-center">
  <div class="text-center container-sm col-8 col-sm-6 rounded">
    <div class="text center col-12">
    @using (Html.BeginForm())
    {
      <input type="submit" value= "Mark Complete" class = "bn632-hover bn20" />
    }
    </div>
  </div>
</div>
  }
} else if (ViewBag.IsComplete == true)
{
<div class="row justify-content-center">
  <div class="text-center container-sm col-8 col-sm-6 rounded">
    <div class="text center col-12">
    @using (Html.BeginForm())
    {
      <input type="submit" value= "Completed" class = "bn632-hover bn22" />
    }
    </div>
  </div>
</div>
}

<section class="text-content p-3 m-3">
  <div class="container-md p-3 m-3">
    <p class="lead">
      It's important when designing and building your applications to understand how Reacts data flow works. React uses something call "Unidirectional Data Flow". It's exactly as it sounds, data only flows in one direction. When we denote a "direction" here, we are talking about the relationship between Parent components and Child components, and when for instance a piece of data is passed from a Parent to a Child we consider that passing "down". 
    </p>
    <p class="lead">
      Here's How <a href="https://coderpad.io/blog/development/master-react-unidirectional-data-flow/">CoderPad explains it</a>:

      <blockquote class="px-5 p-3 px-3 mx-5 p-3 border border-light font-italic">Child components should only call functions from parent components, while parent components should only set/pass data to their children.</blockquote>
    </p>
    <p class="lead">
      Educative.io goes on <a href="https://www.educative.io/edpresso/what-is-unidirectional-data-flow-in-react">further to say</a>:
      <blockquote class="px-5 p-3 px-3 mx-5 p-3 border border-light font-italic"> The data from the parent is known as props. You can only transfer data from parent to child and not vice versa. This means that the child components cannot update or modify the data on their own, makeing sure that a clean data flow architecture is followed. This also means that you can control the data flow better.</blockquote>
    </p>
    <p class="lead">
      Check out the video below for a more in-depth explanation. 
    </p>
  </div>
</section>

<section class="video-content bg-light shadow-lg p-3 mb-5 rounded">
  <div class="container-lg p-3 m-3">
    <div class="text-center">
      <h2>Unidirectional Data Flow and State Events</h2>
    </div>
    <div class="row justify-content-center my-5">
        <iframe width="760" height="515" src="https://www.youtube.com/embed/itXnRFx4pHI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>
  </div>
</section>


<div class="row justify-content-center my-5">
  <div class="text-center container-lg p-3 m-3 col-8 col-sm-6 rounded">
    <a href="/FundamentalsTwo/Lesson3"><button class="bn632-hover bn20">Previous Lesson</button></a>
    <a href="/FundamentalsTwo/Lesson5"><button class="bn632-hover bn20">Next Lesson</button></a>
  </div>
</div>

<div class="card m-3 shadow-lg p-5 mb-5 rounded">
  <h3 class="text-center">Resources</h3>
  <a href="https://www.educative.io/edpresso/what-is-unidirectional-data-flow-in-react">Educative.io Article on Unidirectional Data Flow</a>
  <a href="https://coderpad.io/blog/development/master-react-unidirectional-data-flow/">Master React Unidirectional Data Flow</a>
</div>



